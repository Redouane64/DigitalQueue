@page "users/{id}"

@model IndexModel

@{
    ViewData["Title"] = $"{Model.Name}'s Profile";
}

<div class="container p-3 align-items-center">
    @if (TempData["PostResultMessage"] is bool result)
    {
        @await Component.InvokeAsync("Alert", new
        {
            success = result,
            message = (result ? "User updated successfully." : "Something went wrong.")
        })
    }

    <div class="row mt-5">
        <div class="col m-1">
            <p class="h4 mb-4"><i class="fa fa-fw fa-user m-1"></i>Basic Info</p>
            <div class="row">
                <div class="col-3 mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" class="form-control" id="name" value="@Model.Name"
                           readonly="readonly">
                </div>
            </div>
            <div class="row">
                <div class="col-3 mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email" value="@Model.Email"
                           readonly="readonly">
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-6">
            <p class="h3 mb-2"><i class="fa fa-fw fa-key m-1"></i>Account Roles</p>
            @await Component.InvokeAsync("RolesList", new { roles = Array.Empty<string>() })
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-6">
            <p class="h3"><i class="fa fa-fw fa-book m-1"></i>Courses Roles</p>
            @await Component.InvokeAsync("PermissionsList", new { userId = RouteData.Values["id"] })
        </div>
    </div>
</div>